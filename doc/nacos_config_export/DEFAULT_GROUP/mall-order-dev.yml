server:
  port: 8844
spring:
  redis:
    host: localhost # Redis服务器地址
    database: 0 # Redis数据库索引（默认为0）
    port: 6379 # Redis服务器连接端口
    password: 
    jedis:
      pool:
        max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8 # 连接池中的最大空闲连接
        min-idle: 0 # 连接池中的最小空闲连接
    timeout: 3000ms # 连接超时时间（毫秒）
  rabbitmq:
    host: localhost
    port: 5672
    virtual-host: /mall
    username: admin
    password: admin
    publisher-confirms: true #如果对异步消息需要回调必须设置为true
  application:
    name: mall-order
  main:
    allow-bean-definition-overriding: true
  shardingsphere:
    props:
      sql:
        show: true
feign:
  client:
    config:
      default:
        loggerLevel: full
        requestInterceptors:
          - com.luban.feignapi.interceptor.HeaderInterceptor
        readTimeout: 3000
        connectTimeout: 3000
logging:
  level:
    com:
      luban:
        malll:
          feignapi:
            ums:
              UmsMemberReceiveAddressFeignApi: debug

# 自定义redis键值
redis:
  key:
    prefix:
      authCode: "portal:authCode:"
      orderId: "portal:orderId:"
    expire:
      authCode: 90 # 验证码超期时间
# 自定义消息队列名称
rabbitmq:
  queue:
    name:
      cancelOrder: cancelOrderQueue
#支付-当面付qrcode存储与访问路径设置
trade:
  zhifu:
    qrcode:
      aliPayPath: /alipay
      weChatPath: /wechat
      storePath: C:/temp/qr-code
      httpBasePath: /static/qrcode
      paySuccessCallBack: http://lubanbole.natapp1.cc/order/paySuccess

seata:
  config:
    nacos:
      server-addr: localhost:8848
    type: nacos
  registry:
    type: nacos
  tx-service-group: prex_tx_group
  client:
    support:
      spring:
        datasource-autoproxy: true

#rocketmq配置
rocketmq:
  name-server: localhost:9876 #连接超时时间
  producer:
    send-message-timeout: 30000 #发送消息超时时间
    group: order-group
  mall:
    scheduleTopic: order-status-check #定时任务
    cancelGroup: cancel-order #消费组业务逻辑,取消超时未支付订单
    transGroup: cart-delete #事务消息群组
    transTopic: order-cart #订单-购物车主题
    asyncOrderTopic: async-order #异步订单topic
    asyncOrderGroup: async-order-group #异步下单消息消费

mybatis:
  mapper-locations:
    - classpath:dao/*.xml
    - classpath*:com/**/mapper/*.xml    